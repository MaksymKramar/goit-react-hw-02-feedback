{"version":3,"sources":["components/Statistics/Statistics.style.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.style.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.style.js","components/Notification/Notification.js","App.jsx","index.js"],"names":["SpanName","styled","span","Statistics","good","neutral","bad","total","positivePercentage","Button","button","FeedbackOptions","options","onLeaveFeedback","btns","Object","keys","map","btn","i","type","onClick","Section","title","children","Text","p","Notification","message","App","state","btnIncrement","e","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","totalFeedback","positiveFeedbackPercentage","className","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAEaA,EAAWC,IAAOC,KAAV,gE,OCyBNC,I,EAAAA,EAtBf,YAAsE,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,IAAIC,EAA4B,EAA5BA,MAAMC,EAAsB,EAAtBA,mBAE7C,OACE,gCACE,eAACR,EAAD,oBAAkBI,KAClB,eAACJ,EAAD,uBAAoBK,KACpB,eAACL,EAAD,mBAAgBM,KAChB,eAACN,EAAD,oBAAiBO,KACjB,eAACP,EAAD,gCAA6BQ,EAA7B,YCXOC,EAASR,IAAOS,OAAV,+ECkBJC,MAdf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC1BC,EAAOC,OAAOC,KAAKJ,GAEzB,OACI,8BACKE,EAAKG,KAAI,SAACC,EAAKC,GAAN,OACN,cAACV,EAAD,CAAgBW,KAAK,SAASC,QAAS,kBAAMR,EAAgBK,IAA7D,SACKA,GADQC,SCEdG,I,EAAAA,EAXf,YAAoC,IAAlBC,EAAiB,EAAjBA,MAAMC,EAAW,EAAXA,SACpB,OACI,8BACI,oCACN,6BAAKD,IACJC,QCNMC,EAAOxB,IAAOyB,EAAV,gDCSFC,MARf,YAAkC,IAAXC,EAAU,EAAVA,QACnB,OACI,8BACI,cAACH,EAAD,UAAOG,OCGEC,E,4MACnBC,MAAQ,CACN1B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPyB,aAAe,SAACC,GACd,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAIE,EAAUF,IAAM,O,EAIzBG,mBAAqB,SAAC/B,EAAMC,EAASC,GAAhB,OAAwBF,EAAOC,EAAUC,G,EAE9D8B,gCAAkC,SAAChC,EAAMC,EAASC,GAAhB,OAChC+B,KAAKC,MAAc,IAAPlC,EAAc,EAAK+B,mBAAmB/B,EAAMC,EAASC,K,4CAEnE,WACE,MAA+BiC,KAAKT,MAA5B1B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBkC,EAAgBD,KAAKJ,mBAAmB/B,EAAME,EAAKD,GACnDoC,EAA4BF,KAAKH,gCAAgChC,EAAME,EAAKD,GAElF,OACE,sBAAKqC,UAAU,YAAf,UACE,cAAC,EAAD,CAASnB,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBX,QAAS2B,KAAKT,MAAOjB,gBAAiB0B,KAAKR,iBAE9D,cAAC,EAAD,CAASR,MAAM,aAAf,SACGiB,EAAgB,EACZ,cAAC,EAAD,CAAYpC,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKC,MAAOiC,EAAehC,mBAAoBiC,IAC9F,cAAC,EAAD,CAAcb,QAAQ,+B,GA/BJe,aAsCjCxC,EAAWyC,aAAe,CACtBpC,mBAAoB,KC5CxBqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.73cd5441.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const SpanName = styled.span`\r\ndisplay: block;\r\nmargin-top: 25px;\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { SpanName, } from './Statistics.style';\r\n\r\nfunction Statistics({ good, neutral, bad,total,positivePercentage }) {\r\n   \r\n  return (\r\n    <div>\r\n      <SpanName>Good: { good}</SpanName>\r\n      <SpanName>Neutral: {neutral}</SpanName>\r\n      <SpanName>Bad: {bad}</SpanName>\r\n      <SpanName>Total:{total}</SpanName>\r\n      <SpanName>Positive feedback:{positivePercentage} %</SpanName>\r\n      \r\n    </div>   \r\n  )  \r\n}\r\n\r\n  \r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Button = styled.button`\r\nwidth: 100px;\r\nheight: 25px;\r\nmargin-right: 15px;\r\n`;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Button,} from './FeedbackOptions.style'\r\n\r\n\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n    const btns = Object.keys(options)\r\n\r\n    return (\r\n        <div>\r\n            {btns.map((btn, i) => (\r\n                <Button key={i} type=\"button\" onClick={() => onLeaveFeedback(btn)}>\r\n                    {btn}\r\n                </Button>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FeedbackOptions\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};","import React from 'react';\r\n\r\n\r\nfunction Section({title,children}) {\r\n    return (\r\n        <div>\r\n            <section >\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Section\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Text = styled.p`\r\nfont-size: larger;\r\n`;","import React from 'react';\r\nimport{Text,} from './Notification.style'\r\n\r\nfunction Notification({message}) {\r\n    return (\r\n        <div>\r\n            <Text>{message}</Text>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import './App.css';\n\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions.js';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\n\nimport React, { Component } from 'react'\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  btnIncrement = (e) => {\n    this.setState(prevState => ({\n      [e]: prevState[e] += 1\n    }));\n  };\n\n  countTotalFeedback = (good, neutral, bad) => good + neutral + bad;\n\n  countPositiveFeedbackPercentage = (good, neutral, bad) =>\n    Math.round((good * 100) / this.countTotalFeedback(good, neutral, bad));\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = this.countTotalFeedback(good, bad, neutral);\n    const positiveFeedbackPercentage= this.countPositiveFeedbackPercentage(good, bad, neutral)\n\n    return (\n      <div className='container'>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={this.state} onLeaveFeedback={this.btnIncrement}></FeedbackOptions>\n        </Section>\n        <Section title=\"Statistics\">\n          {totalFeedback > 0\n            ? (<Statistics good={good} neutral={neutral} bad={bad} total={totalFeedback} positivePercentage={positiveFeedbackPercentage} />)\n            : (<Notification message=\"No feedback given\"></Notification>)\n          }     \n        </Section>\n      </div>\n    )\n  }\n}\nStatistics.defaultProps = {\n    positivePercentage: 100\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}